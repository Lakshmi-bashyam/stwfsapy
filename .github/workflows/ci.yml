name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 #v5.6.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install --no-root

      - name: Lint Code
        run: poetry run ruff check stwfsapy

      - name: Test Code
        run: poetry run pytest --cov=./ --cov-config=.coveragerc --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 #v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: matrix.python-version == '3.10'

      - name: Look for security vulnerabilities in dependencies
        run: poetry run safety check --full-report
        continue-on-error: true

      - name: Look for security issues in code
        run: poetry run bandit -c pyproject.toml -r stwfsapy
        continue-on-error: true
